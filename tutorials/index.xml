<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Brainhack cloud â€“ Tutorials</title><link>http://brainhack.org/brainhack_cloud/tutorials/</link><description>Recent content in Tutorials on Brainhack cloud</description><generator>Hugo -- gohugo.io</generator><atom:link href="http://brainhack.org/brainhack_cloud/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Tutorials: Virtual machines</title><link>http://brainhack.org/brainhack_cloud/tutorials/vm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://brainhack.org/brainhack_cloud/tutorials/vm/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Running a Virtual machine on the Oracle cloud is the basis for many other
things.&lt;/p>
&lt;h2 id="setup">Setup&lt;/h2>
&lt;p>Make sure you selected the geographic region where you would like to create the
resource.&lt;/p>
&lt;p>Here I create it in the Home Region, Frankfurt.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Notice&lt;/h4>
Ideally, you want the region to be as close to you (or your users) as possible to have low latencies. So, you should change the default from Frankfurt to another region from the list.
&lt;/div>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157349780-69fdf973-d4aa-4850-9f49-8ecca369f399.png" alt="image">&lt;/p>
&lt;p>Head to &lt;code>Compute -&amp;gt; Instances&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157349177-12c719c9-0285-489f-9e42-9d6b82b520c0.png" alt="image">&lt;/p>
&lt;p>Check that you selected YOUR project compartment (testproject, is the example
here - but you need to change this!) and click &lt;code>Create Instance&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157349261-28eb8f1e-44ff-4939-9ec5-af8e1b37b90c.png" alt="image">&lt;/p>
&lt;h3 id="selecting-an-image-and-a-shape">Selecting an image and a shape&lt;/h3>
&lt;p>You can name the instance and then select an Image (Oracle Linux is a good
starting point as it has many tools installed that make it work very well on the
Cloud) and select a Shape.&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157349502-ac932a4e-82b1-410e-8785-56e6e9ae147b.png" alt="image">&lt;/p>
&lt;p>VM.Standard.E4.Flex is a good starting point.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
The default is Ampere and this is an ARM architecture, so most of your applications wouldn&amp;rsquo;t work out of the box - it is therefore important to change the default Shape to an x86 architecture, like the VM.Standard.E4.Flex.
&lt;/div>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157349484-eff7d3ec-3f5d-4a6d-b020-a93e63d30745.png" alt="image">&lt;/p>
&lt;p>The network setup has sensible defaults to start with&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157349579-b23e4815-2b65-44f9-9f46-53b496b60425.png" alt="image">&lt;/p>
&lt;p>You can either paste a public key you already have to access to this VM or create a key by choosing the option &lt;code>Generate a key pair for me&lt;/code> under &lt;code>Add SSH Keys&lt;/code> section.&lt;/p>
&lt;h3 id="connect-to-the-vm-using-the-oracle-key-pair">Connect to the VM using the Oracle key pair&lt;/h3>
&lt;p>If you would like to use the key pairs the instance creation procedure generates, you can use the following steps based on your operating system.&lt;/p>
&lt;p>First download and install an SSH client to your machine (for Linux and Mac, use &lt;a href="https://www.ibm.com/links?url=https%3A%2F%2Fwww.openssh.com%2F">OpenSSH&lt;/a> and for Windows use &lt;a href="https://www.ibm.com/links?url=https%3A%2F%2Fwww.putty.org%2F">Putty&lt;/a>).&lt;/p>
&lt;p>From the Instances dashboard, find your VM you would like to connect with ssh, and click to find and note its Public IP address.&lt;/p>
&lt;p>If you are using Linux or Mac, run the following command on your local terminal to change the file permission on the private key file that you downloaded from the Oracle dashboard.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
If you chose the option &lt;code>generate a key pair for me&lt;/code> you need to change the permission on the file after downloading - otherwise it will result in a Permission denied (publickey,gssapi-keyex,gssapi-with-mic) error triggered by &lt;code>Load key &amp;quot;*.key&amp;quot;: bad permissions&lt;/code>
&lt;/div>
&lt;p>&lt;code>chmod 600 /path/privateKeyFileName&lt;/code>&lt;/p>
&lt;p>Then Run the below command to access the VM via SSH by pasting the IP address of the VM you created.&lt;/p>
&lt;p>&lt;code>ssh opc@IPADDRESS -i /path/privateKeyFileName&lt;/code>&lt;/p>
&lt;p>If you are using Windows use the PuTTY Key Gen generator to generate a PuTTY Private Key file (.ppk).&lt;/p>
&lt;p>Open the PuTTY Keygen Generator.&lt;/p>
&lt;p>Load the downloaded private key file to the PuTTY Generator.&lt;/p>
&lt;p>Enter a phasephrase if you prefer to secure the private key to the &lt;code>Key passpphrase&lt;/code> and &lt;code>Confirm passphrase&lt;/code> fields, otherwise leave these as empty.&lt;/p>
&lt;p>Then click &lt;code>Save private key&lt;/code> to save the private key file it produces.&lt;/p>
&lt;p>Go to your local command line (PowerShell) and connect to your VM with the below command&lt;/p>
&lt;p>&lt;code>putty -i C:\Path\privateKey.ppk opc@IPADDRESS&lt;/code>.&lt;/p>
&lt;p>Now you are good to go!&lt;/p>
&lt;h3 id="create-your-own-public-key">Create your own public key&lt;/h3>
&lt;p>If you don&amp;rsquo;t have a public key yet - this is how you can create one (for example in
the cloudshell)&lt;/p>
&lt;p>Open the Cloud Shell (this will take a few seconds the first time)&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157349825-f77d4e77-aba9-4578-beb8-fde536332d5b.png" alt="image">&lt;/p>
&lt;p>Run &lt;code>ssh-keygen&lt;/code> to create private/public key pairs (the defaults are sensible,
so just hit &lt;code>Enter&lt;/code> a few times)&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157350101-0b01d89a-f839-473d-8d6e-6c312e1cfb16.png" alt="image">&lt;/p>
&lt;p>Now print the public key with &lt;code>cat ~/.ssh/id_rsa.pub&lt;/code> and copy it to the
clipboard.&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157350191-67f4bc21-5c62-4b28-b2e0-3076cec65c60.png" alt="image">&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
Never share the private key with anyone, which is in &lt;code>id_rsa&lt;/code>!
&lt;/div>
&lt;p>Paste it in the Add SSH keys section&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157350315-ee920db6-0bf2-45de-9dd3-3f96c9bbc8fc.png" alt="image">&lt;/p>
&lt;h3 id="disk-size">Disk size&lt;/h3>
&lt;p>You can specify a custom boot volume size, but you can also increase this
later (described below).&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> it&amp;rsquo;s not possible to shrink a volume! Only increasing the size is
possible, so start small and increase when needed. Increasing the size is even possible while the instance is running and will not interrupt your work :)&lt;/p>
&lt;p>The rest of the defaults are
sensible.&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157350468-7eac6e01-bbc7-48e3-9fbd-fc0ac01b2476.png" alt="image">&lt;/p>
&lt;h3 id="create-the-vm">Create the VM&lt;/h3>
&lt;p>This will now create the machine.&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157350580-aaf564d0-8619-4122-82be-12bce8b3c47d.png" alt="image">&lt;/p>
&lt;h2 id="connect-to-instance">Connect to Instance&lt;/h2>
&lt;p>You can now use an SSH client on your computer to connect to the Instance, or
the cloudshell.&lt;/p>
&lt;p>You find the connection details in.&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157351454-d888fd88-130b-40fe-986f-46e451d569ae.png" alt="image">&lt;/p>
&lt;p>So in this case you would connect to your instance by typing.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh opc@130.61.212.59
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you are planning on running web services on the instance (like a jupyter notebook service) - then it&amp;rsquo;s easiest to connect to the instance via a port forwarding and then opening the web service in your local browser at localhost:portnumber.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh -L portnumber:127.0.0.1:portnumber opc@130.61.212.59
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Accept the fingerprint and you should be connected.&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157351631-ea6d6e0e-bf8c-4816-99bd-b92b89b033cd.png" alt="image">&lt;/p>
&lt;h2 id="expand-disk">Expand disk&lt;/h2>
&lt;p>By default, the instance will not utilize the whole disk size!&lt;/p>
&lt;p>You can check with &lt;code>df -h&lt;/code>.&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157351914-38855be5-9b2a-4883-bfc4-768890fd1f8e.png" alt="image">&lt;/p>
&lt;p>But it can expand the disk with the following commands.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo dd &lt;span style="color:#000">iflag&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>direct &lt;span style="color:#204a87;font-weight:bold">if&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/dev/oracleoci/oraclevda &lt;span style="color:#000">of&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/dev/null &lt;span style="color:#000">count&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> sudo tee /sys/class/block/&lt;span style="color:#4e9a06">`&lt;/span>readlink /dev/oracleoci/oraclevda &lt;span style="color:#000;font-weight:bold">|&lt;/span> cut -d&lt;span style="color:#4e9a06">&amp;#39;/&amp;#39;&lt;/span> -f 2&lt;span style="color:#4e9a06">`&lt;/span>/device/rescan
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo /usr/libexec/oci-growfs -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you are not using an Oracle Linux image, then oci-growfs will not be installed. You can create the script manually by copying this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># oci-utils&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">ASSUME_YES&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">ASSUME_NO&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Print usage message&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>usage&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">Usage: $0 [OPTION]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">Expand the root filesystem to its configured size.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">Option:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> -y Assume &amp;#34;yes&amp;#34; for all questions.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> -n Assume &amp;#34;n&amp;#34; to all questions (used for preview).
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> -h Print this message.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Prompt for action confirmation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>confirm&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ASSUME_YES&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -eq &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">ASSUME_NO&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -eq &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># force use of a tty, if we are inside a &amp;#39;read loop&amp;#39; already the prompt is never display and we loop forever&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">read&lt;/span> -p &lt;span style="color:#4e9a06">&amp;#34;Confirm? [y/n]&amp;#34;&lt;/span> input &amp;lt; /dev/tty
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">input&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>yY&lt;span style="color:#ce5c00;font-weight:bold">][&lt;/span>eE&lt;span style="color:#ce5c00;font-weight:bold">][&lt;/span>sS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>yY&lt;span style="color:#ce5c00;font-weight:bold">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> 0&lt;span style="color:#000;font-weight:bold">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>nN&lt;span style="color:#ce5c00;font-weight:bold">][&lt;/span>oO&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>nN&lt;span style="color:#ce5c00;font-weight:bold">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> 1&lt;span style="color:#000;font-weight:bold">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>part_growfs_preview&lt;span style="color:#ce5c00;font-weight:bold">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#000">$#&lt;/span> -ne &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Invalid disk or partition.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> growpart &lt;span style="color:#000">$1&lt;/span> &lt;span style="color:#000">$2&lt;/span> --dry-run
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">$?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>part_growfs_func&lt;span style="color:#ce5c00;font-weight:bold">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#000">$#&lt;/span> -ne &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Invalid disk or partition.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> growpart &lt;span style="color:#000">$1&lt;/span> &lt;span style="color:#000">$2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#000">$?&lt;/span> -eq &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xfs_growfs /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">$?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$EUID&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> -ne &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;This script needs root privileges to execute.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$#&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> -gt &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$1&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -n&lt;span style="color:#000;font-weight:bold">|&lt;/span>-N&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ASSUME_NO&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -y&lt;span style="color:#000;font-weight:bold">|&lt;/span>-Y&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ASSUME_YES&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -h&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -* &lt;span style="color:#000;font-weight:bold">|&lt;/span> *&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;unknown option: &lt;/span>&lt;span style="color:#000">$1&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> &amp;gt;&lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>2&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usage&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># first get storage type used for root FS&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">_storage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">`&lt;/span>/usr/bin/findmnt --canonicalize --noheadings --output SOURCE /&lt;span style="color:#4e9a06">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># expecting lvm or part,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/usr/bin/lsblk --noheadings -o TYPE,NAME &lt;span style="color:#000">$_storage&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#204a87">read&lt;/span> _type _sto
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_type&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> part&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> part_growfs_preview /dev/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_sto&lt;/span>&lt;span style="color:#000;font-weight:bold">//[0-9]/&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_sto&lt;/span>&lt;span style="color:#000;font-weight:bold">//[^0-9]/&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> confirm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#000">$?&lt;/span> -eq &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> part_growfs_func /dev/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_sto&lt;/span>&lt;span style="color:#000;font-weight:bold">//[0-9]/&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_sto&lt;/span>&lt;span style="color:#000;font-weight:bold">//[^0-9]/&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#000">$?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lvm&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># 1. find LV and VG of the device&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># we pipe to awk to strip away any leading space&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">_root_vg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">`&lt;/span>/usr/sbin/lvs --noheadings --options vg_name --select &lt;span style="color:#000">lv_dm_path&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$_storage&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> awk &lt;span style="color:#4e9a06">&amp;#39;{print $1}&amp;#39;&lt;/span>&lt;span style="color:#4e9a06">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;root VG: &lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_root_vg&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_root_vg&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Cannot find root volume group.&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># 2. find all PVs involve in the VG used for root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> _pv in &lt;span style="color:#4e9a06">`&lt;/span>/usr/sbin/pvs --noheadings --options pv_name --select &lt;span style="color:#000">vg_name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_root_vg&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># 3. find device of PVs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">_device&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">`&lt;/span>/usr/sbin/pvs --noheadings --options devices --select &lt;span style="color:#000">pv_name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_pv&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># device is suffixed with extne number like /dev/sda3(0) , just keep disk information parts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">_device&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_device&lt;/span>&lt;span style="color:#000;font-weight:bold">//([0-9]*)/&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># 3.1 extend the partittion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> part_growfs_preview &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_device&lt;/span>&lt;span style="color:#000;font-weight:bold">//[0-9]/&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_device&lt;/span>&lt;span style="color:#000;font-weight:bold">//[^0-9]/&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> confirm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#000">$?&lt;/span> -eq &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;calling part_growfs_func &lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_device&lt;/span>&lt;span style="color:#000;font-weight:bold">//[0-9]/&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06"> &lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_device&lt;/span>&lt;span style="color:#000;font-weight:bold">//[^0-9]/&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> part_growfs_func &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_device&lt;/span>&lt;span style="color:#000;font-weight:bold">//[0-9]/&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_device&lt;/span>&lt;span style="color:#000;font-weight:bold">//[^0-9]/&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#000">$?&lt;/span> !&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Cannot extend physical volume disk partition.&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># 3.1 extend the PV&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;calling /usr/sbin/pvresize &lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_pv&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /usr/sbin/pvresize &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_pv&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#000">$?&lt;/span> !&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Cannot extend physical volume.&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># 4. extend the LV and the FS&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">_lv_path&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">`&lt;/span>/usr/sbin/lvs --noheadings --options lv_path --select &lt;span style="color:#000">lv_dm_path&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$_storage&lt;/span>&lt;span style="color:#4e9a06">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;calling /usr/sbin/lvextend -l +100%FREE --resizefs &lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_lv_path&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /usr/sbin/lvextend -l +100%FREE --resizefs &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">_lv_path&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#000">$?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">exit&lt;/span> &lt;span style="color:#000">$?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>into &lt;code>/usr/libexec/oci-growfs&lt;/code> by doing this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo vi /usr/libexec/oci-growfs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># hit i to activate insert mode, then paste, then hit SHIFT-Z-Z to exit and save
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod a+x /usr/libexec/oci-growfs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>then execute the expansion command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo dd iflag=direct if=/dev/oracleoci/oraclevda of=/dev/null count=1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &amp;#34;1&amp;#34; | sudo tee /sys/class/block/`readlink /dev/oracleoci/oraclevda | cut -d&amp;#39;/&amp;#39; -f 2`/device/rescan
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo /usr/libexec/oci-growfs -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157352261-3d30774a-4052-4e12-846a-133f4f8ffa98.png" alt="image">&lt;/p>
&lt;p>Now it&amp;rsquo;s using the full volume.&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157352396-a3a4a3a9-38a7-49d5-a18b-880c058bbc2d.png" alt="image">&lt;/p>
&lt;h2 id="increase-disk-size">Increase disk size&lt;/h2>
&lt;p>If you want to increase the disk space beyond the size that you initially set you need to first change the disk size in OCI. You can do this while the instance is running! Go to the instance and select Boot volume from the menu on the left:&lt;/p>
&lt;img width="1052" alt="image" src="https://user-images.githubusercontent.com/4021595/187821034-f59296a2-d386-497d-8a4c-2c84edc577ec.png">
&lt;p>Then click on the boot volume name and click the &lt;code>Edit&lt;/code> button:&lt;/p>
&lt;img width="958" alt="image" src="https://user-images.githubusercontent.com/4021595/187821085-525e9ade-a8ce-4f36-ab0b-a3e9648137d8.png">
&lt;p>Now set the desired size and click &lt;code>Save Changes&lt;/code>:&lt;/p>
&lt;img width="691" alt="image" src="https://user-images.githubusercontent.com/4021595/187821161-24099d27-8218-4907-9ade-7f18d93ee0c6.png">
&lt;p>Then login to the instance and expand the disk again to the new size:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo dd &lt;span style="color:#000">iflag&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>direct &lt;span style="color:#204a87;font-weight:bold">if&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/dev/oracleoci/oraclevda &lt;span style="color:#000">of&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/dev/null &lt;span style="color:#000">count&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> sudo tee /sys/class/block/&lt;span style="color:#4e9a06">`&lt;/span>readlink /dev/oracleoci/oraclevda &lt;span style="color:#000;font-weight:bold">|&lt;/span> cut -d&lt;span style="color:#4e9a06">&amp;#39;/&amp;#39;&lt;/span> -f 2&lt;span style="color:#4e9a06">`&lt;/span>/device/rescan
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo /usr/libexec/oci-growfs -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="terminate-the-instance">Terminate the instance&lt;/h2>
&lt;p>If you don&amp;rsquo;t need the machine anymore, you can &lt;code>Stop&lt;/code> it (you don&amp;rsquo;t pay for the compute anymore, but the disk stays and you can start it back up later) or &lt;code>Terminate&lt;/code> it (everything gets removed, including the boot volume if you want to):&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157352624-f3b2b358-1f3d-4388-bf2f-6fc417d4a439.png" alt="image">&lt;/p>
&lt;p>To cleanup the storage as well, you can select
&lt;code>Permanently delete the attached boot volume&lt;/code> and click &lt;code>Terminate Instance&lt;/code>.&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157352698-9788c610-b5f1-43bf-95e7-ca444e8813fb.png" alt="image">&lt;/p></description></item><item><title>Tutorials: Notebooks</title><link>http://brainhack.org/brainhack_cloud/tutorials/notebooks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://brainhack.org/brainhack_cloud/tutorials/notebooks/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The notebook service is like Google Colab, but without the time or resource
limitations.&lt;/p>
&lt;h2 id="starting-a-notebook-environment">Starting a notebook environment&lt;/h2>
&lt;p>Select the geographic region where you want to run this (e.g. closest to you).&lt;/p>
&lt;p>!!! Important: If you want to use GPUs you need to select a region that has GPUs availabe!!!!&lt;/p>
&lt;ol>
&lt;li>Nvidia GPUs V100 are available in Tokyo, London, (Seoul)&lt;/li>
&lt;li>Nvidia GPUs P100 are available in Frankfurt&lt;/li>
&lt;li>Nvidia GPUs V100 AND P100 are available in Ashburn&lt;/li>
&lt;li>CPU only instances are availabe in Sydney, Zurich, Stockholm, Singapore, Hyderabat, Marseille, Santiago, Toronto, Sao Paulo&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/159638803-174b68ad-c545-4539-8d01-b0952a0e7de4.png" alt="image">&lt;/p>
&lt;p>Then search for &lt;code>Data Science&lt;/code> under &lt;code>Machine Learning&lt;/code>
&lt;img src="https://user-images.githubusercontent.com/4021595/159638307-552138c0-01c1-43d3-823c-3a783e03ef5d.png" alt="image">&lt;/p>
&lt;p>then select your project compartment (in this example &lt;code>testproject&lt;/code>)
&lt;img src="https://user-images.githubusercontent.com/4021595/159638417-30355f09-c965-4848-859a-ed04e49bf94f.png" alt="image">&lt;/p>
&lt;p>then click on create project:
&lt;img src="https://user-images.githubusercontent.com/4021595/159638445-11f09df9-1000-4703-8219-143a382e1d20.png" alt="image">&lt;/p>
&lt;p>enter a &lt;code>Name&lt;/code> and a &lt;code>Description&lt;/code>
&lt;img src="https://user-images.githubusercontent.com/4021595/159638513-b46da7b4-a401-4df4-b0ca-c3df613750b8.png" alt="image">&lt;/p>
&lt;p>then click &lt;code>Create notebook session&lt;/code>
&lt;img src="https://user-images.githubusercontent.com/4021595/159638582-355145bb-ee9e-45d0-979e-902eb39b4565.png" alt="image">&lt;/p>
&lt;p>Name the notebook session and select which resources you need:
&lt;img src="https://user-images.githubusercontent.com/4021595/159638677-41a3239d-0e86-4159-8f5c-3ffcede23bdf.png" alt="image">&lt;/p>
&lt;p>Set how much disk space you want under &lt;code>Block storage size (in GB)&lt;/code>, leave the Default networking and hit &lt;code>Create&lt;/code>&lt;/p>
&lt;p>It will now create everything for you:
&lt;img src="https://user-images.githubusercontent.com/4021595/159638967-1d69f18c-211e-4981-9709-b62514998de4.png" alt="image">&lt;/p>
&lt;p>Once this is done (it will take 2-3minutes), you can open the notebook environment with a click on &lt;code>Open&lt;/code>:
&lt;img src="https://user-images.githubusercontent.com/4021595/159639682-9ce78519-2e7d-4886-b075-d168876d3711.png" alt="image">&lt;/p>
&lt;p>Then you have to log in - leave Tenancy as &lt;code>brainhack&lt;/code> and click &lt;code>Continue&lt;/code>:
&lt;img src="https://user-images.githubusercontent.com/4021595/159639819-38bda64e-61a3-4fcd-b4e4-2c55a6c8bb85.png" alt="image">&lt;/p>
&lt;p>and you have a fully configured notebook environment :)
&lt;img src="https://user-images.githubusercontent.com/4021595/159640023-b03a4e34-968f-4a78-963d-067cb82eb3ec.png" alt="image">&lt;/p>
&lt;p>The notebook environment uses Oracle Linux as a base image, so if you want to install additional packages use:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo yum update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo yum install ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Hint for collaborating with multiple people: Multiple users can login to the same notebook system and work on separate notebooks simultaneously, but avoid editing the same notebook file - otherwise you risk overwriting your changes:
&lt;img src="https://user-images.githubusercontent.com/4021595/159642888-84589148-ed12-42fc-9282-dac7d3b07d5d.png" alt="image">&lt;/p>
&lt;h2 id="clean-up-for-the-day">Clean up for the day&lt;/h2>
&lt;p>When completed for the day, you can save costs (especially important when using GPUs!) by deactivating the environment:&lt;/p>
&lt;p>Close the window and hit &lt;code>Deactivate&lt;/code>
&lt;img src="https://user-images.githubusercontent.com/4021595/159640588-874f2d3f-1123-41eb-98d1-c5d5b4c222c3.png" alt="image">&lt;/p>
&lt;p>This will shut down the compute instances but keep your data - so if you want to continue later, a click on &lt;code>Activate&lt;/code> will bring everything back :)
&lt;img src="https://user-images.githubusercontent.com/4021595/159640942-5c8c1599-9e25-45c2-89eb-7de75b4a8b1e.png" alt="image">&lt;/p>
&lt;p>When reactivating you could even change the resources provided for the environment (e.g. adding a GPU or changing to a CPU only environment to save costs) :)&lt;/p>
&lt;h2 id="clean-up-for-good">Clean up for good&lt;/h2>
&lt;p>If you don&amp;rsquo;t need the notebook environment anymore you can delete everything (including the data) by &lt;code>More Actions&lt;/code> -&amp;gt; &lt;code>Delete&lt;/code>&lt;/p>
&lt;p>A quick confirmation and a click on &lt;code>Delete&lt;/code> will remove &lt;em>everything&lt;/em>:
&lt;img src="https://user-images.githubusercontent.com/4021595/159643054-942a61de-91eb-4b4c-adf4-6e3ba4a0f791.png" alt="image">&lt;/p></description></item><item><title>Tutorials: Github action runner</title><link>http://brainhack.org/brainhack_cloud/tutorials/gh_runner/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://brainhack.org/brainhack_cloud/tutorials/gh_runner/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This section describes how to setup a Github action runner on the cloud that you
can then use to run huge Github workflows that wouldn&amp;rsquo;t run in the hosted
runners :)&lt;/p>
&lt;h2 id="create-a-new-vm-or-hpc">Create a new VM or HPC&lt;/h2>
&lt;p>See our &lt;a href="./../vm">VM&lt;/a> or &lt;a href="./../hpc">HPC&lt;/a> Tutorials.&lt;/p>
&lt;h2 id="configure-github">Configure Github&lt;/h2>
&lt;p>Go to the repository settings and under &lt;code>Actions&lt;/code> you will find &lt;code>Runners&lt;/code> where you can add a self-hosted runner:
&lt;img src="https://user-images.githubusercontent.com/4021595/161414358-b5487e21-daec-4f04-b008-26664a19f8f8.png" alt="image">&lt;/p>
&lt;p>After clicking on &lt;code>New self-hosted runner&lt;/code> and selecting Linux you can copy and paste the first section to the VM created in Step 1:
&lt;img src="https://user-images.githubusercontent.com/4021595/161414412-a7ec45c5-1283-430c-aab3-3fe99717da9a.png" alt="image">&lt;/p>
&lt;p>run the commands listed on that page in your VM and accept the defaults.&lt;/p>
&lt;p>To keep the session running you can use either tmux:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo install tmux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmux new -s runner
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./run.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL-B d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or as an alternative start it as a service, because this will then survive restarts of the VM:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo ./svc.sh install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo ./svc.sh start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="use-custom-runner-in-action">Use custom runner in Action&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># Use this YAML in your workflow file for each job
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>runs-on: self-hosted
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here is an example: &lt;a href="https://github.com/QSMxT/QSMxT/blob/master/.github/workflows/test_segmentation_pipeline.yml">https://github.com/QSMxT/QSMxT/blob/master/.github/workflows/test_segmentation_pipeline.yml&lt;/a>&lt;/p></description></item><item><title>Tutorials: HPC</title><link>http://brainhack.org/brainhack_cloud/tutorials/hpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://brainhack.org/brainhack_cloud/tutorials/hpc/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Oracle cloud supports High Performance Computing and makes it very easy to setup
your own HPC cluster in the cloud. This tutorial here is a basic introduction to get your started. You can find an alternative setup (tailored at deep learning and GPUs here: &lt;a href="https://docs.oracle.com/en/solutions/hpc-bare-metal-gpu-cluster/?source=:so:ch:or:awr::::Cloud&amp;amp;SC=:so:ch:or:awr::::Cloud&amp;amp;pcode=#GUID-F00DA828-106C-40CB-9279-B90D10807358">GPU cluster&lt;/a>)&lt;/p>
&lt;h2 id="before-you-get-started">Before you get started&lt;/h2>
&lt;p>Consider if you actually need High Performance Computing (HPC) for your work. An HPC is a cluster consisting of multiple machines and it uses a head-node (here bastion host) from where jobs are submitted to this cluster using a job engine (for example slurm). If you have many jobs that need to be run independently than the setup described here will work well. A &amp;ldquo;real&amp;rdquo; HPC does more on top: There is a high-performance network between machines and it enables to run jobs that combine multiple machines (e.g. MPI). This would be needed if you have a problem that&amp;rsquo;s so large that a single machine wouldn&amp;rsquo;t be big enough. In this example here we build a cluster without this advanced networking. Most people will not need an HPC for their work and they should use a single &lt;a href="http://brainhack.org/brainhack_cloud/tutorials/vm/">virtual machine&lt;/a>, because it requires considerably less setup work and easier to maintain.&lt;/p>
&lt;h2 id="configure-hpc-cluster">Configure HPC cluster&lt;/h2>
&lt;p>Download the Terraform configuration from here as a zip file:
&lt;a href="https://github.com/oracle-quickstart/oci-hpc/releases/tag/v2.9.2">https://github.com/oracle-quickstart/oci-hpc/releases/tag/v2.9.2&lt;/a>&lt;/p>
&lt;p>Make sure you selected the geographic region where you would like to create the resource (it should be close to you for best latencies).
&lt;img src="https://user-images.githubusercontent.com/4021595/157349780-69fdf973-d4aa-4850-9f49-8ecca369f399.png" alt="image">&lt;/p>
&lt;p>Then go to &lt;code>Stacks&lt;/code> under &lt;code>Resource Manager&lt;/code>:
&lt;img src="https://user-images.githubusercontent.com/4021595/161415757-409d264d-39e0-41f0-8bb0-3b5adc53abde.png" alt="image">&lt;/p>
&lt;p>In the &lt;code>List Scope&lt;/code> drop down menu, select your project compartment. Click &lt;code>Create Stack&lt;/code> and upload the zip file as a Terraform configuration source.&lt;/p>
&lt;img width="1043" alt="create stack" src="https://user-images.githubusercontent.com/4021595/184516975-a8188aa9-8337-4523-9111-fb7a1c7868ba.png">
&lt;p>give your cluster a name, but leave the default options for the rest:&lt;/p>
&lt;img width="846" alt="naming the cluster" src="https://user-images.githubusercontent.com/4021595/184517026-76cc8d32-b19d-48a4-b4c3-8b88d0131ba1.png">
&lt;p>Check that the cluster is being created in your compartment again and then hit &lt;code>Next&lt;/code>&lt;/p>
&lt;p>In &lt;code>cluster configuration&lt;/code> you need to add your public SSH key for the opc admin account. Make sure to setup your SSH keys first &lt;a href="http://brainhack.org/brainhack_cloud/tutorials/vm/#create-a-public-key">create a public key&lt;/a>&lt;/p>
&lt;img width="852" alt="image" src="https://user-images.githubusercontent.com/4021595/184517096-e62de0bf-e535-4aaa-84fc-70001e142051.png">
&lt;p>In &lt;code>Headnode options&lt;/code> you need to select an Availability Domain. It doesn&amp;rsquo;t matter what you select there and the options will depend on the geographic region where you launch your HPC. You can keep the headnode default size, or you can select a different flavour:&lt;/p>
&lt;img width="849" alt="image" src="https://user-images.githubusercontent.com/4021595/184517208-247ffd57-56a6-44b2-a9a5-259ee728e00a.png">
&lt;p>In &lt;code>Compute node options&lt;/code> you need to disable &lt;code>Use cluster network&lt;/code> (this is for MPI and not required for most people. It requires special network hardware that&amp;rsquo;s not available in every region. If you need MPI please get in touch and we can help you setting this up). Select a compute node size that fits your problem size. Drop the initial compute size node to 1, because we will scale the cluster using autoscaling.&lt;/p>
&lt;img width="829" alt="image" src="https://user-images.githubusercontent.com/4021595/184517285-b6805297-1a16-4f29-aa4c-816334b28e86.png">
&lt;p>In &lt;code>Autoscaling&lt;/code> you should enable &lt;code>scheduler based autoscaling&lt;/code>, &lt;code>monitor the autoscaling&lt;/code> and disable &lt;code>RDMA latency check&lt;/code> if you are not using MPI.&lt;/p>
&lt;img width="847" alt="image" src="https://user-images.githubusercontent.com/4021595/184517301-b08cf59e-f07f-42c4-865b-64a88e466274.png">
&lt;p>For &lt;code>API authentication&lt;/code> and &lt;code>Monitoring&lt;/code> leave the defaults:&lt;/p>
&lt;img width="851" alt="image" src="https://user-images.githubusercontent.com/4021595/184517316-b8a93508-17a7-44a6-8024-0a01f3e01a06.png">
&lt;p>For &lt;code>Additional file system&lt;/code> accept the defaults:&lt;/p>
&lt;img width="848" alt="image" src="https://user-images.githubusercontent.com/4021595/184517726-d07ad10f-dc95-48ec-97fd-85e5ee19a6b9.png">
&lt;p>For &lt;code>Advanced bastion options&lt;/code>, &lt;code>Avanced storage options&lt;/code> and &lt;code>Network options&lt;/code> you can accept the defaults:&lt;/p>
&lt;img width="836" alt="image" src="https://user-images.githubusercontent.com/4021595/184517368-589f1876-d703-4560-86c9-60cb23a0c711.png">
&lt;p>For &lt;code>Software&lt;/code> enable &lt;code>Install Spack package manager&lt;/code> in addition to the defaults:&lt;/p>
&lt;img width="843" alt="image" src="https://user-images.githubusercontent.com/4021595/184517390-d36d605d-e51b-46aa-84bf-140b2b711065.png">
&lt;p>Then hit &lt;code>next&lt;/code> and on the next page scroll to the end and tick &lt;code>Run apply&lt;/code>:&lt;/p>
&lt;img width="848" alt="image" src="https://user-images.githubusercontent.com/4021595/184517402-a02367f8-d3df-4436-9cf6-356994172b1e.png">
&lt;p>Then hit &lt;code>Create&lt;/code>&lt;/p>
&lt;p>This will then create a custom HPC for your project (it will take a couple of minutes to complete).&lt;/p>
&lt;p>Once everything is done you find the bastion IP (the &amp;ldquo;head node&amp;rdquo; or &amp;ldquo;login node&amp;rdquo;) under Outputs:
&lt;img src="https://user-images.githubusercontent.com/4021595/161416418-6fcf7712-646d-48ea-9861-743fd679ba28.png" alt="image">&lt;/p>
&lt;p>You can now ssh into the HPC as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>ssh opc@ipbastion
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Be aware that this &amp;ldquo;opc&amp;rdquo; account is the admin account with sudo access of the cluster and should not be used to perform analyses. It is better to create a user account to perform the work in:&lt;/p>
&lt;p>Once logged in with the opc account, you can create normal cluster users using the &lt;code>cluster&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>cluster user add test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>These users can then login using a password only and do not require an SSH key.&lt;/p>
&lt;p>There is a shared file storage (which can also be configured in size in the stack settings) in /nfs/cluster&lt;/p>
&lt;p>More information can be found here:
&lt;a href="https://github.com/oracle-quickstart/oci-hpc">https://github.com/oracle-quickstart/oci-hpc&lt;/a>&lt;/p>
&lt;h2 id="configuring-node-memory">Configuring node memory&lt;/h2>
&lt;p>When you first submit jobs using &lt;code>sbatch&lt;/code>, if you followed the above setup you may find you recieve the following error:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>error: Memory specification can not be satisfied
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is happening as the &lt;code>RealMemory&lt;/code> for each node (e.g. the amount of memory each compute node may use) has not yet been specified and defaults to a very low value. To rectify this, first work out how much memory to allocate to each node by running &lt;code>scontrol show nodes&lt;/code> and looking at &lt;code>FreeMem&lt;/code>.
&lt;img src="https://user-images.githubusercontent.com/4021595/176095292-c17e658b-0372-4c04-9f51-32d00c2e0f1c.png" alt="image">&lt;/p>
&lt;p>To change the &lt;code>RealMemory&lt;/code>, you must edit the slurm configuration file (which may be found in &lt;code>/etc/slurm/slurm.conf&lt;/code>). Inside the slurm configuration file you will find several lines which begin &lt;code>NodeName=&lt;/code>. These specify the settings for each node. To fix the error, on each of these lines, add &lt;code>RealMemory=AMOUNT&lt;/code> where &lt;code>AMOUNT&lt;/code> is the amount of memory you wish to allow the node to use.
&lt;img src="https://user-images.githubusercontent.com/4021595/176095320-b9f55fb1-7365-4e8a-9a30-eee5117c12dc.png" alt="image">&lt;/p>
&lt;p>Once you have done this, you must reconfigure slurm by running the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo scontrol reconfigure
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuring-x11-forwarding">Configuring X11 forwarding&lt;/h2>
&lt;p>If you want to use graphical aplications you need to install:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo yum install install mesa-dri-drivers xorg-x11-server-Xorg xorg-x11-xauth xorg-x11-apps mesa-libGL xorg-x11-drv-nouveau.x86_64 -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo vi /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>change to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>X11Forwarding yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>X11UseLocalhost no
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>then&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo systemctl restart sshd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="troublehsooting-editing-a-deployd-stack-fails">Troublehsooting: Editing a deployd stack fails&lt;/h2>
&lt;p>This can have many reasons, but the first one to check is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>Error: 409-Conflict, The Instance Configuration ocid1.instanceconfiguration.oc1.phx.aaaaaaaabycbnzxq4uskt4f7mklp4g4fcqk4m42aabj2r2fkchjygppdudua is associated to one or more Instance Pools.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This means that the Instance Pool blocks the terraform script. To get it back working you need to destroy the stack first and then rebuild it.&lt;/p>
&lt;p>Another option is that the resource type you used is not supported:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>Error: 400-InvalidParameter, Shape VM.Standard1.4 is incompatible with image ocid1.image.oc1..aaaaaaaamy4z6turov5otuvb3wlej2ipv3534agxcd7loajk2f54bfmlyhnq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Suggestion: Please update the parameter(s) in the Terraform config as per error message Shape VM.Standard1.4 is incompatible with image ocid1.image.oc1..aaaaaaaamy4z6turov5otuvb3wlej2ipv3534agxcd7loajk2f54bfmlyhnq
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here, I selected a shape that is too &amp;ldquo;small&amp;rdquo; and it fails. It needs at least VM.Standard2.4&lt;/p>
&lt;h2 id="installing-custom-software">Installing Custom Software&lt;/h2>
&lt;p>If you don&amp;rsquo;t want to use spack (or cannot) then a good strategy is to install under &lt;code>/nfs/cluster&lt;/code>, add any relevant &amp;ldquo;bin&amp;rdquo; directories it to your path, and install there.
As an example we will install &lt;a href="https://go.dev/doc/install">go&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#204a87">cd&lt;/span> /nfs/cluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ wget https://go.dev/dl/go1.19.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo tar -C /nfs/cluster -xzf go1.19.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ rm go1.19.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then add the go bin to your bash profile (&lt;code>vim ~/.bash_profile&lt;/code>) as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">PATH&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/nfs/cluster/go/bin:&lt;span style="color:#000">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>and when you open a new shell or &lt;code>source ~/.bash_profile&lt;/code> you should be able to see go on your path:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ which go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/nfs/cluster/go/bin/go
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ go version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>go version go1.19 linux/amd64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Further, since it&amp;rsquo;s located in the /nfs/cluster directory, it will be available on other nodes! Here is how to see the other nodes you have:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sinfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PARTITION AVAIL TIMELIMIT NODES STATE NODELIST
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>compute* up infinite &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> idle compute-permanent-node-941
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then shell into one, and also find the go binary.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ssh compute-permanent-node-941
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Last login: Sun Aug &lt;span style="color:#0000cf;font-weight:bold">14&lt;/span> 02:30:01 &lt;span style="color:#0000cf;font-weight:bold">2022&lt;/span> from relative-flamingo-bastion.public.cluster.oraclevcn.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ which go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/nfs/cluster/go/bin/go
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="install-singularity">Install Singularity&lt;/h3>
&lt;p>First, system dependencies. Follow the example above in &lt;a href="#installing-custom-software">install custom software&lt;/a> to install Go.
Next, install Singularity dependencies. These will need to be installed to each node.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo yum groupinstall -y &lt;span style="color:#4e9a06">&amp;#39;Development Tools&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo yum install libseccomp-devel squashfs-tools cryptsetup -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo yum install glib2-devel -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ensure Go is on your path (as shown above). Then install Singularity. We will install from source.&lt;/p>
&lt;p>&lt;strong>Important&lt;/strong> ensure you don&amp;rsquo;t have anything (e.g., pkg-config) loaded from spack, as this can interfere with installing Singularity using system libs. Also note that installing with system libs is a workaround for spack singularity not working perfectly (due to setuid). This means you&amp;rsquo;ll need to do these steps on each of your head login and worker nodes.&lt;/p>
&lt;p>You can do the same with an official &lt;a href="https://github.com/sylabs/singularity/releases/">release&lt;/a>.
Note that you don&amp;rsquo;t need to compile this on the nfs node - you can compile it anywhere and make install
to /nfs/cluster.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ git clone https://github.com/sylabs/singularity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#204a87">cd&lt;/span> singularity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git submodule update --init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># You can also set prefix to be it&amp;#39;s own directory, e.g., /nfs/cluster/singularity-&amp;lt;version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ./mconfig --prefix&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/nfs/cluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#204a87">cd&lt;/span> ./builddir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ make
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once you install, make sure you add the newly created bin to your path (wherever that happens to be). E.g.,
that might look like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">PATH&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/nfs/cluster/go/bin:/nfs/cluster/bin:&lt;span style="color:#000">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then when you source your &lt;code>~/.bash_profile&lt;/code> you can test:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ which singularity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/nfs/cluster/bin/singularity
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="advanced-use-mpi-networking">Advanced: Use MPI networking&lt;/h2>
&lt;p>Your first need to request access to those resources with this
&lt;a href="./../../docs/request">form&lt;/a>.&lt;/p>
&lt;p>Then follow the above instructions, but leave &lt;code>Use cluser network&lt;/code> activated and &lt;code>RDMA options enabled&lt;/code>.&lt;/p></description></item><item><title>Tutorials: Neurodesk</title><link>http://brainhack.org/brainhack_cloud/tutorials/neurodesk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://brainhack.org/brainhack_cloud/tutorials/neurodesk/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This section describes how to setup a Neurodesk instance on the cloud. Neurodesk provides a containerised data analysis environment to facilitate reproducible analysis of neuroimaging data. Software included can be found here: &lt;a href="https://www.neurodesk.org/applications/">https://www.neurodesk.org/applications/&lt;/a>&lt;/p>
&lt;h2 id="create-a-new-vm">Create a new VM&lt;/h2>
&lt;p>See our &lt;a href="./../vm">VM&lt;/a> tutorial&lt;/p>
&lt;h2 id="configure-dockerpodman">Configure Docker/Podman&lt;/h2>
&lt;p>See our &lt;a href="../../docs/docker">Docker&lt;/a> documentation&lt;/p>
&lt;h2 id="follow-the-official-neurodesk-instructions-for-running-the-latest-container">Follow the official Neurodesk instructions for running the latest container&lt;/h2>
&lt;p>&lt;a href="https://www.neurodesk.org/docs/neurodesktop/getting-started/cloud/">https://www.neurodesk.org/docs/neurodesktop/getting-started/cloud/&lt;/a>&lt;/p></description></item></channel></rss>
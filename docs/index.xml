<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Brainhack cloud â€“ Documentation</title><link>http://brainhack.org/brainhack_cloud/docs/</link><description>Recent content in Documentation on Brainhack cloud</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="http://brainhack.org/brainhack_cloud/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Requesting Cloud Resources</title><link>http://brainhack.org/brainhack_cloud/docs/request/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://brainhack.org/brainhack_cloud/docs/request/</guid><description>
&lt;h2 id="request-resources-via-a-github-issue-template">Request resources via a Github Issue Template&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Fill in this
&lt;a href="https://github.com/brainhackorg/brainhack_cloud/issues/new?assignees=&amp;amp;labels=resource_request&amp;amp;template=request-resource-access.yml">form&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Once an &lt;a href="https://brainhack.org/brainhack_cloud/admins/team/">admin&lt;/a> acts on
this, you can continue.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="activate-your-account">Activate your account&lt;/h2>
&lt;p>An admin will create your account and send you a password and you will get an
activation email from Oracle&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157340745-1d565298-a117-401c-9611-93e051e97853.png" alt="image">&lt;/p>
&lt;p>Click on the activation link.&lt;/p>
&lt;p>Now, it&amp;rsquo;s very important that you expand the LOWER section of this login field
and fill in your Username from the email and the password you were sent!&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157340962-3021d25f-31b1-44c0-a30a-130c70ac3327.png" alt="image">&lt;/p>
&lt;p>Then click on &lt;code>Sign In&lt;/code>.&lt;/p>
&lt;p>Then change your password and hit &lt;code>Save New Password&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157341119-90b9d2e6-d06f-4659-a14f-17d0082c38b1.png" alt="image">&lt;/p>
&lt;p>If you are using any non Chrome, Safari or Firefox browser you need to indicate
that you don&amp;rsquo;t want to be warned if things don&amp;rsquo;t work as expected (note: Edge
works fine!).&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157341388-d1a70845-ada5-4b0a-8fd9-a307f0c698ae.png" alt="image">&lt;/p>
&lt;p>If everything is complete you should see this.&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157341435-4f604137-78f8-46e0-8fbb-a3113f4fac65.png" alt="image">&lt;/p>
&lt;p>You should now be able to select your Compartment (which should be named like your
project) and start using resources.&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157345820-81a62c95-5603-4bf7-a266-0991fbd9dcb9.png" alt="image">&lt;/p>
&lt;p>Always make sure to select your compartment - otherwise you cannot see or create
resources.&lt;/p>
&lt;p>Happy computing :)&lt;/p></description></item><item><title>Docs: Object Storage</title><link>http://brainhack.org/brainhack_cloud/docs/object_storage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://brainhack.org/brainhack_cloud/docs/object_storage/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Object Storage is like Dropbox &amp;hellip; it allows you to simply
store files and they can be accessible via links on the web (or APIs) and you
don&amp;rsquo;t have to monitor the size of the disk (as opposed to block storage) and it
comes with very nice features for mirroring your data to other regions or
tiering data (making it cheaper if files are not accessed very often).&lt;/p>
&lt;h2 id="setup-a-new-bucket">Setup a new Bucket&lt;/h2>
&lt;p>Select a Region from the list where you want your files to be located:&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/161411496-e142dfdc-b84d-4e67-9ea0-71bc74a3f157.png" alt="image">&lt;/p>
&lt;p>Then search for &lt;code>Buckets&lt;/code> and you will find it under &lt;code>Storage&lt;/code> -&amp;gt; &lt;code>Object Storage &amp;amp; Archival Storage&lt;/code> -&amp;gt; Buckets:
&lt;img src="https://user-images.githubusercontent.com/4021595/161411526-7e47aa08-5284-4d21-b3bb-9501f34a29fa.png" alt="image">&lt;/p>
&lt;p>Select your project&amp;rsquo;s compartment:
&lt;img src="https://user-images.githubusercontent.com/4021595/161411532-efc61a06-e927-4f09-bfcb-ca777a2eb259.png" alt="image">&lt;/p>
&lt;p>Create a new Bucket:&lt;/p>
&lt;ul>
&lt;li>give it a name&lt;/li>
&lt;li>In addition to the defaults we recommend &lt;code>Enable Auto-Tiering&lt;/code> (this will make the storage cheaper by moving objects to lower tier storage if they are not used frequently) and &lt;code>Uncommitted Multipart Uploads Cleanup&lt;/code> (this will clean up in case uploads failed halfway)&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/161411600-37cf0399-2376-41cf-8dd7-cb75f7ad8a58.png" alt="image">&lt;/p>
&lt;h2 id="uploading-files-to-a-bucket">Uploading files to a bucket&lt;/h2>
&lt;p>You could upload files via the GUI in the Oracle cloud by clicking the &lt;code>Upload&lt;/code> button:
&lt;img src="https://user-images.githubusercontent.com/4021595/161412082-f95b1d4c-67f9-4b69-a360-fd7aab8bc508.png" alt="image">&lt;/p>
&lt;p>You could also use tools like rclone or curl or the OCI CLI to upload files (more about these tools later)&lt;/p>
&lt;h2 id="making-a-bucket-public">Making a Bucket public&lt;/h2>
&lt;p>By default, the files in the bucket will not be visible to everyone. Let&amp;rsquo;s find the URL to the file we just uploaded: Click on the 3 dots next to the file and click on &lt;code>View Object details&lt;/code>:
&lt;img src="https://user-images.githubusercontent.com/4021595/161412133-d4437e2b-4886-4b16-ae05-8ec2e2215dd1.png" alt="image">&lt;/p>
&lt;p>When opening this URL, you will get this error:
&lt;img src="https://user-images.githubusercontent.com/4021595/161412164-ed46dd79-ee10-42ea-80dc-b1a8088e38f1.png" alt="image">&lt;/p>
&lt;p>You can either make the WHOLE bucket visible to the world or use &amp;ldquo;Pre-Authenticated Requests&amp;rdquo;. Let&amp;rsquo;s start with the easy (and less control/secure) way first:&lt;/p>
&lt;p>Click on &lt;code>Edit Visibility&lt;/code> and switch to public:
&lt;img src="https://user-images.githubusercontent.com/4021595/161412193-e3ec0171-9b0b-46f5-885e-17163b1cb8c2.png" alt="image">&lt;/p>
&lt;p>Now the file and EVERYTHING else in the bucket are visible to EVERYONE on the internet.&lt;/p>
&lt;h2 id="pre-authenticated-requests">Pre-Authenticated Requests&lt;/h2>
&lt;p>Click on the three dots next to the file again and Click &lt;code>Create Pre-Authenticated Request&lt;/code>:
&lt;img src="https://user-images.githubusercontent.com/4021595/161412278-26bbead8-7a58-43b3-8d31-e88a892f83fa.png" alt="image">&lt;/p>
&lt;p>This gives you more options to control access and you can also expire the access :)&lt;/p>
&lt;p>And you then get a specific URL to access the file (or the bucket or the files you configured):
&lt;img src="https://user-images.githubusercontent.com/4021595/161412301-5fe1b423-e6ed-458a-9347-fdf8e3915fe0.png" alt="image">&lt;/p>
&lt;p>The URL will stop working when it expires or when you delete the Request. You find all requests under &lt;code>Pre-Authenticated Requests&lt;/code> in the Resources menu:
&lt;img src="https://user-images.githubusercontent.com/4021595/161412353-319882d3-7016-4e1b-800f-f9a77b2af0a1.png" alt="image">&lt;/p>
&lt;h2 id="tiering">Tiering&lt;/h2>
&lt;p>Lifecycle Rules allow you to control what happens with files after a certain amount of time. You can delete them or move them to Archival storage for example:
&lt;img src="https://user-images.githubusercontent.com/4021595/161412377-63896ae5-8d02-4bfc-bf4f-e8b30010281d.png" alt="image">&lt;/p>
&lt;h2 id="mirroring">Mirroring&lt;/h2>
&lt;p>Mirroring allows you to keep the bucket up-to-date with another bucket in another region (e.g. main bucket is in Europe and the replica is in Australia). This is controlled under the &lt;code>Replication Policy&lt;/code>.&lt;/p>
&lt;p>You first need to create the target bucket in the other region and then you can configure it as a target:
&lt;img src="https://user-images.githubusercontent.com/4021595/161412505-d64a0177-e520-46f5-86b8-f08c4e60b962.png" alt="image">&lt;/p>
&lt;h2 id="mounting-a-bucket-inside-a-vm">Mounting a Bucket inside a VM:&lt;/h2>
&lt;p>First we need to install a few things on the VM (assuming Oracle Linux here):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo yum update -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo yum install -y epel-release
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo yum install -y redhat-lsb-core
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo yum install -y s3fs-fuse
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a new bucket as described in the beginning of this page above.&lt;/p>
&lt;p>Next we need to create a &lt;code>Customer Secret Key&lt;/code>. For this click on the user icon in the top right corner and select &lt;code>User settings&lt;/code>.&lt;/p>
&lt;img width="330" alt="image" src="https://user-images.githubusercontent.com/4021595/188381438-ac9fbfdf-1fd7-4316-bc6b-374d9f6c24e2.png">
&lt;p>Then in the Resources menu on the left select &amp;ldquo;Customer Secret Keys&amp;rdquo; and click Generate Secret Key. Give it a name and then copy the secret (it will never be shown again!). Then copy the Access Key shown in the table as well in a separate notepad.&lt;/p>
&lt;img width="594" alt="image" src="https://user-images.githubusercontent.com/4021595/188381774-647ea0de-0b26-452f-bb95-549862596b0a.png">
&lt;p>Now you need to store these two things inside ~/.passwd-s3fs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>echo FILL_IN_YOUR_ACCESS_KEY_HERE:FILL_IN_YOUR_SECRET_HERE &amp;gt; ${HOME}/.passwd-s3fs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>and then you can mount the bucket your created earlier:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>chmod 600 ${HOME}/.passwd-s3fs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod +x /usr/bin/fusermount
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mkdir /data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod a+rwx /data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s3fs FILL_IN_YOUR_BUCKET_NAME /data/ -o endpoint=eu-frankfurt-1 -o passwd_file=${HOME}/.passwd-s3fs -o url=https://froi4niecnpv.compat.objectstorage.eu-frankfurt-1.oraclecloud.com/ -onomultipart -o use_path_request_style
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The bucket is now accessible under /data and you can almost treat it like a volume mount (but it&amp;rsquo;s not 100% posix complient).&lt;/p>
&lt;h2 id="uploading-files-using-curl">Uploading files using CURL&lt;/h2>
&lt;p>To enable this you need to create a Pre-Authenticated Request which allows access to the Bucket and it allows objects read and write and Object Listing:
&lt;img src="https://user-images.githubusercontent.com/4021595/161412582-5f0ff3c7-f207-4ca1-811f-163ef2355fd2.png" alt="image">&lt;/p>
&lt;p>Then copy the URL, as it will never be shown again:
&lt;img src="https://user-images.githubusercontent.com/4021595/161412595-a9d4710a-f65d-408e-a025-1208e35ba0fe.png" alt="image">&lt;/p>
&lt;p>Now you can use curl to upload files:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">curl&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#000">v&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#000">X&lt;/span> &lt;span style="color:#000">PUT&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000">upload&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#000">file&lt;/span> &lt;span style="color:#000">YOUR_FILE_HERE&lt;/span> &lt;span style="color:#000">YOUR_PRE_AUTHENTICATED_REQUEST_URL_HERE&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="uploading-files-using-rclone">Uploading files using RCLONE&lt;/h2>
&lt;p>Rclone is a great tool for managing the remote file storages. To link it up with Oracles object storage you need to configure a few things (the full version is here: &lt;a href="https://blogs.oracle.com/linux/post/using-rclone-to-copy-data-in-and-out-of-oracle-cloud-object-storage#:~:text=%20Using%20rclone%20to%20copy%20data%20in%20and,which%20Rclone%20will%20be%20used%20to...%20More%20)">https://blogs.oracle.com/linux/post/using-rclone-to-copy-data-in-and-out-of-oracle-cloud-object-storage#:~:text=%20Using%20rclone%20to%20copy%20data%20in%20and,which%20Rclone%20will%20be%20used%20to...%20More%20)&lt;/a>:&lt;/p>
&lt;ol>
&lt;li>The Amazon S3 Compatibility API relies on a signing key called a Customer Secret Key. You need to create this in your User&amp;rsquo;s settings:
&lt;img src="https://user-images.githubusercontent.com/4021595/161412892-0e9d6190-362c-41b5-9579-5f9a2371ebed.png" alt="image">&lt;/li>
&lt;/ol>
&lt;p>Then Click on &lt;code>Generate Secret Key&lt;/code> under &lt;code>Customer Secret Keys&lt;/code>:
&lt;img src="https://user-images.githubusercontent.com/4021595/161412964-dd036c50-834e-436f-a8d1-a44da80f29d2.png" alt="image">&lt;/p>
&lt;p>Save the Secret Key for later:
&lt;img src="https://user-images.githubusercontent.com/4021595/161412970-d22661cd-b549-48ff-8c33-15ba538f02d6.png" alt="image">&lt;/p>
&lt;p>Then save the &lt;code>Access Key&lt;/code> from the table as well.&lt;/p>
&lt;ol start="2">
&lt;li>Find out where your rclone config file is located:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>rclone config file
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Add this to your rclone config file:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>[myobjectstorage]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type = s3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>provider = Other
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>env_auth = false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>access_key_id = &amp;lt;ACCESS KEY&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>secret_access_key = &amp;lt;SECRET KEY&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>endpoint = froi4niecnpv.compat.objectstorage.&amp;lt;REGION&amp;gt;.oraclecloud.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace &lt;code>ACCESS KEY&lt;/code> and &lt;code>SECRET KEY&lt;/code> with the ones generated earlier. Replace &lt;code>REGION&lt;/code> with the region where the storage bucket is located (e.g. eu-frankfurt-1).&lt;/p>
&lt;p>Now you can use rclone to for example list files in the bucket:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>rclone ls myobjectstorage:/test-bucket
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or you can upload files or whole directories (or download by reversing the order of Target/Source):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>rclone copy YOURFILE_or_YOURDIRECTORY myobjectstorage:/test-bucket
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or you can sync whole directories or other remote storage locations (includes deletes!):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>rclone sync YOURDIRECTORY_OR_YOUR_OTHER_RCLONE_STORAGE myobjectstorage:/test-bucket
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Tenancy Explorer</title><link>http://brainhack.org/brainhack_cloud/docs/tenancy_explorer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://brainhack.org/brainhack_cloud/docs/tenancy_explorer/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The Tenancy Explorer is very useful to see what resources are currently being
used in your project.&lt;/p>
&lt;p>It&amp;rsquo;s in &lt;code>Governance -&amp;gt; Tenancy Explorer&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157352815-7ca0f88c-d2e1-4ca3-8d1b-f7917423a173.png" alt="image">&lt;/p>
&lt;p>You can use this to clean up resources that are no longer required.&lt;/p>
&lt;p>Hint: The network setup creates a lot of things and to cleanup it&amp;rsquo;s easiest to
go to &lt;code>Virtual Cloud Networks&lt;/code>, select the VCN you don&amp;rsquo;t need anymore and click
&lt;code>Terminate&lt;/code> - this will go out and remove everything correctly:&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/157353107-5a3a8063-189a-49c3-9c85-24b6bba52c13.png" alt="image">&lt;/p></description></item><item><title>Docs: Installing and Using Docker</title><link>http://brainhack.org/brainhack_cloud/docs/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://brainhack.org/brainhack_cloud/docs/docker/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Docker (or a software container in general) is great for reproducibility and making it easy to move your tools in and out of the cloud. If you don&amp;rsquo;t know what containers are, here is a 3 minute explanation: &lt;a href="https://www.youtube.com/watch?v=HelrQnm3v4g">https://www.youtube.com/watch?v=HelrQnm3v4g&lt;/a>&lt;/p>
&lt;p>You can either install the original &amp;ldquo;Docker&amp;rdquo; or a drop-in replacement called &amp;ldquo;Podman&amp;rdquo;&lt;/p>
&lt;h2 id="installing-docker">Installing Docker&lt;/h2>
&lt;p>Docker is not installed by default on Oracle Linux and these steps will install and start Docker:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">sudo&lt;/span> &lt;span style="color:#000">dnf&lt;/span> &lt;span style="color:#000">install&lt;/span> &lt;span style="color:#000">dnf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#000">utils&lt;/span> &lt;span style="color:#000">zip&lt;/span> &lt;span style="color:#000">unzip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">sudo&lt;/span> &lt;span style="color:#000">dnf&lt;/span> &lt;span style="color:#000">config&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#000">manager&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#000">repo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">https&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">//&lt;/span>&lt;span style="color:#000">download&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">docker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">com&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">linux&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">centos&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">docker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#000">ce&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">repo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">sudo&lt;/span> &lt;span style="color:#000">dnf&lt;/span> &lt;span style="color:#000">install&lt;/span> &lt;span style="color:#000">docker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#000">ce&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000">nobest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">sudo&lt;/span> &lt;span style="color:#000">systemctl&lt;/span> &lt;span style="color:#000">enable&lt;/span> &lt;span style="color:#000">docker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">sudo&lt;/span> &lt;span style="color:#000">systemctl&lt;/span> &lt;span style="color:#000">start&lt;/span> &lt;span style="color:#000">docker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">service&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="or-installing-podman-instead-of-docker">OR: Installing Podman instead of Docker&lt;/h2>
&lt;p>Podman is compatible with docker and is the default in Oracle Linux (and some argue it&amp;rsquo;s even better). This is how to install podman:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo yum install docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Yes: This is actually installing podman in Oracle Linux!&lt;/p>
&lt;p>Or the direct way:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo yum install podman
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you installed podman using &lt;code>sudo yum install docker&lt;/code> you can run docker commands directly, but it will tell you that this is actually podman:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/160227312-43836181-cd0c-4d26-bc18-9ccc9fb0f700.png" alt="image">&lt;/p>
&lt;p>Let&amp;rsquo;s remove that msg:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo touch /etc/containers/nodocker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we have podman installed as &amp;ldquo;docker&amp;rdquo; drop-in replacement and we can test it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>docker run hello-world
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/160227372-0012e396-a2ca-4f80-8455-d4b2c8616b19.png" alt="image">&lt;/p>
&lt;p>and we could now run everything we like, e.g. &lt;a href="https://neurodesk.github.io/docs/neurodesktop/getting-started/linux/">https://neurodesk.github.io/docs/neurodesktop/getting-started/linux/&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>mkdir /home/opc/neurodesktop-storage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo yum install tmux
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>tmux new -s neurodesk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo docker run \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --shm-size=1gb -it --privileged --name neurodesktop \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -v ~/neurodesktop-storage:/neurodesktop-storage \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -e HOST_UID=&amp;#34;$(id -u)&amp;#34; -e HOST_GID=&amp;#34;$(id -g)&amp;#34;\
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -p 8080:8080 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -h neurodesktop-20220302 docker.io/vnmd/neurodesktop:20220329
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Hit CTRL-b and then d to detach from the tmux session (re-attaching is possible using &lt;code>tmux attach-session -t neurodesk&lt;/code>).&lt;/p>
&lt;p>and this is how easy it is to run a container on the cloud :)&lt;/p>
&lt;p>if you connect to your cloud instance using a port-forwarding &lt;code>ssh -L 8080:127.0.0.1:8080 opc@xxx.xx.xx.xx&lt;/code> then you could now use Neurodesktop via visiting http://localhost:8080/#/?username=user&amp;amp;password=password in your local browser. When done, stop the container with CTRL-C and run &lt;code>sudo docker rm neurodesktop&lt;/code> to cleanup.&lt;/p></description></item><item><title>Docs: Kubernetes</title><link>http://brainhack.org/brainhack_cloud/docs/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://brainhack.org/brainhack_cloud/docs/kubernetes/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Kubernetes enables running and orchestrating multiple software containers.&lt;/p>
&lt;h2 id="setup-kubernetes-cluster-on-oracle-cloud-using-oke">Setup Kubernetes Cluster on Oracle Cloud using OKE&lt;/h2>
&lt;p>Search for &lt;code>OKE&lt;/code> in the menu and then go to &lt;code>Kubernetes Clusters (OKE)&lt;/code> under &lt;code>Containers &amp;amp; Artifacts&lt;/code>:
&lt;img src="https://user-images.githubusercontent.com/4021595/164392430-231652d9-abf3-4cc0-ac90-4b2dd5c000ea.png" alt="image">&lt;/p>
&lt;p>Select the region where you would like to create the Cluster:
&lt;img src="https://user-images.githubusercontent.com/4021595/164392545-765fc2bd-50c1-460f-9615-213b81d3ae54.png" alt="image">&lt;/p>
&lt;p>Select the compartment where you would like to create the Cluster:
&lt;img src="https://user-images.githubusercontent.com/4021595/164392623-6bfc0561-7d6c-4e32-aa70-fef8259961bc.png" alt="image">&lt;/p>
&lt;p>&lt;code>Quick Create&lt;/code> is great and gives a good starting point that works for most applications:
&lt;img src="https://user-images.githubusercontent.com/4021595/164392731-1f23834c-9be3-40f8-b2c9-24ea65c13fc4.png" alt="image">&lt;/p>
&lt;p>The defaults are sensible, but Public Workers make it easier to troubleshoot things in the beginning:
&lt;img src="https://user-images.githubusercontent.com/4021595/164392860-eb050636-e820-46e2-a98a-cfdaf45a9281.png" alt="image">&lt;/p>
&lt;p>Select the shape you like and 1 worker is good to start (can be increased and changed later!)
&lt;img src="https://user-images.githubusercontent.com/4021595/164393030-561bf2d1-1af2-408b-9e38-51802efdd976.png" alt="image">&lt;/p>
&lt;p>Under advanced you can configure the boot-volume size:
&lt;img src="https://user-images.githubusercontent.com/4021595/164393130-65e48e2e-605f-4d6f-9fe3-78518fba0d14.png" alt="image">&lt;/p>
&lt;p>Add an SSH key for troubleshooting worker nodes:
&lt;img src="https://user-images.githubusercontent.com/4021595/164393220-77da1837-5407-476c-a971-1b3dc69b3d14.png" alt="image">&lt;/p>
&lt;p>Review everything and then hit &lt;code>Create&lt;/code> and it should go and set-up everything :)
&lt;img src="https://user-images.githubusercontent.com/4021595/164393349-2b34f99a-5ea0-462e-95c4-4dd2f6d7c16e.png" alt="image">&lt;/p>
&lt;p>That&amp;rsquo;s how easy it can be to setup a whole Kubernetes cluster :) Thanks OCI team for creating OKE!
&lt;img src="https://user-images.githubusercontent.com/4021595/164393450-1abc92f1-7dad-4e77-a5b5-0c72e7b0c08f.png" alt="image">&lt;/p>
&lt;p>It will take a few minutes until everything is up and running -&amp;gt; Coffee break?&lt;/p>
&lt;p>Once everything is ready:
&lt;img src="https://user-images.githubusercontent.com/4021595/164396586-28f044db-f7fa-45f9-a454-ce47b41b3255.png" alt="image">&lt;/p>
&lt;p>you can access the cluster and the settings are given when clicking &lt;code>Access Cluster&lt;/code>:
&lt;img src="https://user-images.githubusercontent.com/4021595/164396652-d56916ae-c822-4a03-a0de-471ffc550599.png" alt="image">&lt;/p>
&lt;h2 id="customizing-nodes-using-init-scripts">Customizing nodes using Init-scripts&lt;/h2>
&lt;p>If you configured Public IP addresses for the worker nodes, then you can connect to the nodes for troubleshooting - Click on the node under &lt;code>Nodes&lt;/code> -&amp;gt; &lt;code>pool1&lt;/code>:
&lt;img src="https://user-images.githubusercontent.com/4021595/164403035-67eebf45-82a2-4627-8461-457e63ad0468.png" alt="image">&lt;/p>
&lt;p>By default the disks are NOT expanded to the Bootvolume size you configured, so this can be fixed via init scripts. Edit the node pool and under advanced set the inits script:
&lt;img src="https://user-images.githubusercontent.com/4021595/164403545-b43aca42-6185-4713-8faa-0a02762ad5b7.png" alt="image">&lt;/p>
&lt;p>This script will expand the disk:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>curl --fail -H &lt;span style="color:#4e9a06">&amp;#34;Authorization: Bearer Oracle&amp;#34;&lt;/span> -L0 http://169.254.169.254/opc/v2/instance/metadata/oke_init_script &lt;span style="color:#000;font-weight:bold">|&lt;/span> base64 --decode &amp;gt;/var/run/oke-init.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash /var/run/oke-init.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dd &lt;span style="color:#000">iflag&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>direct &lt;span style="color:#204a87;font-weight:bold">if&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/dev/oracleoci/oraclevda &lt;span style="color:#000">of&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/dev/null &lt;span style="color:#000">count&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> sudo tee /sys/class/block/&lt;span style="color:#4e9a06">`&lt;/span>readlink /dev/oracleoci/oraclevda &lt;span style="color:#000;font-weight:bold">|&lt;/span> cut -d&lt;span style="color:#4e9a06">&amp;#39;/&amp;#39;&lt;/span> -f 2&lt;span style="color:#4e9a06">`&lt;/span>/device/rescan
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo /usr/libexec/oci-growfs -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then hit &lt;code>Save Changes&lt;/code>. To apply these configuration changes you need to Scale the pool to 0 and then backup to 1:
&lt;img src="https://user-images.githubusercontent.com/4021595/164403744-30b40a8a-1e3a-428d-9a7e-14e7a3414d33.png" alt="image">&lt;/p>
&lt;h2 id="cleanup">Cleanup&lt;/h2>
&lt;p>You can delete the whole cluster to cleanup:
&lt;img src="https://user-images.githubusercontent.com/4021595/164403933-41d231a9-e157-4dca-b770-e0d903813f8c.png" alt="image">&lt;/p>
&lt;p>But be aware that Kubernetes can create resources via API calls, which is great, but it also means that these additionally created resources (like load balancers or storage volumes) will NOT be cleaned up automatically and need to cleaned up manually!&lt;/p></description></item></channel></rss>